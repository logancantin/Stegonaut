from PyInquirer import prompt
import os
from imgsteg import encode, decode

def banner():
    return "PYSTEG - Version 0.1\nMade by Logan Cantin"

def intro():
    print(banner())

    answers = prompt(
        {
            'type': 'list',
            'name': 'operation',
            'message': 'What operation would you like to do?',
            'choices': [
                'Encode',
                'Decode'
            ],
            'filter': lambda a: a.lower()
        }
    )

    if answers['operation'] == 'encode':

        answers.update(
            prompt([
            {
                'type': 'input',
                'name': 'carrier',
                'message': 'What is name of your carrier file?',
                'default': 'pysteg',
                'validate': lambda x: os.path.exists(x),
            },
            {
                'type': 'list',
                'name': 'stegtype',
                'message': 'What would you like to conceal in the carrier?',
                'choices': [
                    "File", 
                    "Text"
                ],
                'filter': lambda x: x.lower()

            },
        ]))

        if answers['stegtype'] == 'text':
            answers.update(prompt([
                {
                    'type': 'input',
                    'name': 'payload_text',
                    'message': 'What message would you like to conceal in the carrier?',
                }
            ]))
        else:
            answers.update(prompt([
                {
                    'type': 'input',
                    'name': 'payload_path',
                    'message': 'What file would you like to conceal in the carrier?',
                    'validate': lambda x: os.path.exists(x)
                }
            ]))

        encode(answers)
    
    else:
        answers.update(prompt([
            {
                'type': 'input',
                'name': 'carrier',
                'message': 'What is name of your carrier file?',
                'default': 'pysteg',
                'validate': lambda x: os.path.exists(x),
            },
            {
                'type': 'input',
                'name': 'savelocation',
                'message': 'Where would you like the concealed file to be saved?'
            }
        ]))

        decode(answers)
    
if __name__ == '__main__':
    intro()
